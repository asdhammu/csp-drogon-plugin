{
    parserClass="com.asdhammu.cspdrogon.language.parser.CSPDrogonParser"
    extends="com.intellij.extapi.psi.ASTWrapperPsiElement"

    psiClassPrefix="CSPDrogon"
    psiImplClassSuffix="Impl"
    psiPackage="com.asdhammu.cspdrogon.language.psi"
    psiImplPackage="com.asdhammu.cspdrogon.language.psi.impl"

    elementTypeHolderClass="com.asdhammu.cspdrogon.language.psi.CSPDrogonTypes"
    elementTypeClass="com.asdhammu.cspdrogon.language.psi.CSPDrogonElementType"
    tokenTypeClass="com.asdhammu.cspdrogon.language.psi.CSPDrogonTokenType"

    psiImplUtilClass="com.asdhammu.cspdrogon.language.psi.impl.CSPDrogonPsiImplUtil"
}

CSPDirectiveFile ::= (item_)*

private item_ ::= (html_element)

html_element ::= empty_element | start_tag_element | csp_directive

start_tag_element ::= startTag content endTag
empty_element ::= startEmptyTag XML_EMPTY_ELEMENT_END

private startTag ::= XML_START_TAG_START XML_NAME attribute* XML_TAG_END
private endTag ::= XML_END_TAG_START XML_NAME XML_TAG_END
private startEmptyTag ::= XML_START_TAG_START XML_NAME attribute*

private attribute ::= XML_NAME XML_EQ attributeValue
private attributeValue ::= XML_ATTRIBUTE_VALUE_START_DELIMITER XML_ATTRIBUTE_VALUE_TOKEN* XML_ATTRIBUTE_VALUE_END_DELIMITER | XML_ATTRIBUTE_VALUE_TOKEN

private content ::= ( html_element
| XML_DATA_CHARACTERS
| XML_CHAR_ENTITY_REF
| XML_TAG_CHARACTERS
| XML_ENTITY_REF_TOKEN
| WHITE_SPACE
)*

csp_directive ::= (view_directive | layout_directive | param_directive | cplusplus_data) {
pin=1
}

cplusplus_data ::= CPLUS_VIEW_START DOLLARSIGN CPLUS_VARIABLE_NAME SEMICOLON CPLUS_VIEW_END

view_directive ::= VIEW_START directive_content {
pin=1
methods=[getDirectiveType]
}

layout_directive ::= LAYOUT_START directive_content{
pin=1
methods=[getDirectiveType]
}

private directive_content ::= WHITE_SPACE* file_reference WHITE_SPACE* DIRECTIVE_END{
pin=2
}

file_reference ::= FILE_NAME CSP_EXT {
pin=1
recoverWhile=file_reference_recover
}

private file_reference_recover ::= !(DIRECTIVE_END | WHITE_SPACE)

param_directive ::= PARAM_START param_directive_content{
    pin = 1
}

private param_directive_content ::= WHITE_SPACE* PARAM_VARIABLE_NAME WHITE_SPACE* PARAM_END{
pin=2
recoverWhile=param_content_recover
}

private param_content_recover ::= !(PARAM_START | VIEW_START | LAYOUT_START | PARAM_END | '<')